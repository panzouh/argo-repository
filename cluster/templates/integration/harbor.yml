{{- define "harbor.enabled" -}}
{{ .Values.harbor.enabled }}
{{- end -}}
{{ if eq (include "harbor.enabled" .) "true" }}
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: harbor
  namespace: {{ .Values.argocd.namespace }}
  finalizers:
  {{- include "argocd.applications.finalizers" . | nindent 4 }}
spec:
  {{- template "cluster.syncPolicy.default" . }}
  destination:
    namespace: {{ .Values.harbor.namespace }}
    server: https://kubernetes.default.svc
  project: integration
  source:
    chart: {{ .Values.harbor.chart.name }}
    repoURL: {{ .Values.harbor.chart.repo }}
    targetRevision: {{ .Values.harbor.chart.version }}
    helm:
      version: v3
      values: |-
        harborAdminPassword: {{ .Values.harbor.values.bootstrapPassword }}
        secretKey: {{ .Values.harbor.values.secretKey }}
        {{- if and .Values.harbor.values.ingress.enabled (or (eq (include "ingress.namespace" .) "ingress-nginx" (eq (include "ingress.namespace" .) "traefik-system"))) }}
        expose:
          type: ingress
          tls:
            {{- if .Values.ingress.ingressDefinition.ssl.enabled }}
            enabled: true
            certSource: secret
            secret:
              {{- if eq .Values.ingress.ingressDefinition.dns.mode "wildcard" }}
              secretName: harbor-core-certificate
              notarySecretName: harbor-core-certificate
              {{- else if eq .Values.ingress.ingressDefinition.dns.mode "domain" }}
              secretName: harbor-core-certificate
              {{- end }}
            {{- else }}
            enabled: false
            certSource: none
            {{- end -}}
          ingress:
            hosts:
              {{- if eq .Values.ingress.ingressDefinition.dns.mode "wildcard" }}
              core: {{ .Values.harbor.values.ingress.coreName }}.{{ .Values.ingress.ingressDefinition.dns.wildcard }}
              notary: {{ .Values.harbor.values.ingress.notaryName }}{{ .Values.ingress.ingressDefinition.dns.wildcard }}
              {{- else if eq .Values.ingress.ingressDefinition.dns.mode "domain" }}
              core: {{ .Values.ingress.ingressDefinition.dns.domain }}
              notary: {{ .Values.ingress.ingressDefinition.dns.domain }}
              {{- end }}
            annotations:
              {{- if eq (include "ingress.namespace" .) "ingress-nginx" }}
              {{- with .Values.ingress.nginx.values.ingressAnnotations }}
                {{- toYaml . | nindent 14 }}
              {{- end }}
              {{- else if eq (include "ingress.namespace" .) "traefik-system" }}
              {{- with .Values.ingress.traefik.values.ingressAnnotations }}
                {{- toYaml . | nindent 14 }}
              {{- end }}
              {{- end }}
        {{- else }}
        expose:
          type: loadBalancer
        {{- end }}
        {{- if .Values.default.storageClass }}
        persistence:
          persistentVolumeClaim:
            registry:
              size: {{ .Values.harbor.values.persitence.registry }}
            chartmuseum:
              size: {{ .Values.harbor.values.persitence.chartmuseum }}
            jobservice:
              size: {{ .Values.harbor.values.persitence.jobservice }}
            database:
              size: {{ .Values.harbor.values.persitence.database }}
            redis:
              size: {{ .Values.harbor.values.persitence.redis }}
            trivy:
              size: {{ .Values.harbor.values.persitence.trivy }}
        {{- else }}
        persistence:
          enabled: false
        {{- end }}
        {{- if and .Values.harbor.values.monitor .Values.monitoring.prometheus.enabled }}
        metrics:
          enabled: true
          core:
            path: /metrics
            port: 8001
          registry:
            path: /metrics
            port: 8001
          jobservice:
            path: /metrics
            port: 8001
          exporter:
            path: /metrics
            port: 8001
        {{- end }}
        {{- if .Values.proxies.enabled }}
        proxy:
          httpProxy: {{ .Values.proxies.value }}
          httpsProxy: {{ .Values.proxies.value }}
          noProxy: 127.0.0.1,localhost,.local,.internal,{{ .Values.proxies.noProxy }}
          components:
            - core
            - jobservice
            - trivy
        {{- end }}
        {{- if and .Values.harbor.values.ingress.enabled (or (eq (include "ingress.namespace" .) "ingress-nginx" (eq (include "ingress.namespace" .) "traefik-system"))) }}
        externalURL: {{ include "url-constructor" (dict "name" .Values.harbor.values.ingress.coreName "ingress" .Values.ingress.ingressDefinition) }}
        {{- end }}
{{ end }}