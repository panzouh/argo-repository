{{ if eq (include "secrets.isVault" .) "true" }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: vault
  namespace: {{ .Values.argocd.namespace }}
  finalizers:
  {{- include "argocd.applications.finalizers" . | nindent 4 }}
spec:
  {{- template "cluster.syncPolicy.default" . }}
  destination:
    namespace: {{ .Values.argocd.namespace }}
    server: https://kubernetes.default.svc
  project: security
  source:
    chart: {{ .Values.vault.chart.name }}
    repoURL: {{ .Values.vault.chart.repo }}
    targetRevision: {{ .Values.vault.chart.version }}
    plugin:
      - name: argocd-helm-vault-plugin
        env:
          - name: HELM_VALUES
            value: |-
              secrets:
                {{- if eq .Values.monitoring.grafana.values.passwordType "vault" }}
                - secretName: grafana-credentials
                  secretNamespace: {{ .Values.monitoring.namespace }}
                  avpPath: {{ .Values.monitoring.grafana.values.avpPath }}
                  stringData:
                    - key: username
                      placeholder: {{ .Values.monitoring.grafana.values.userKey }}
                    - key: password
                      placeholder: placeholder: {{ .Values.monitoring.grafana.values.passwordKey }}
                {{- end }}
                {{- if eq .Values.monitoring..values.server.ingress.auth.type "vault" }}
                - secretName: prometheus-basic-auth
                  secretNamespace: {{ .Values.monitoring.namespace }}
                  avpPath: {{ .Values.monitoring.prometheus.values.server.ingress.auth.avpPath }}
                  stringData:
                    - key: auth
                      placeholder: {{ .Values.monitoring.prometheus.values.server.ingress.auth.authKey }}
                {{- end }}
{{ end }}