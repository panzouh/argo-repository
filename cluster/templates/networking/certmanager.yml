{{- define "certmanager.enabled" -}}
{{- and .Values.certmanager.enabled (or (eq (include "ingress.namespace" .) "traefik-system") (eq (include "ingress.namespace" .) "ingress-nginx")) -}}
{{- end -}}
{{ if eq (include "certmanager.enabled" .) "true" }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: certmanager
  namespace: {{ .Values.argocd.namespace }}
  finalizers:
  {{- include "argocd.applications.finalizers" . | nindent 4 }}
spec:
  {{- template "cluster.syncPolicy.default" . }}
  destination:
    namespace: {{ .Values.certmanager.namespace }}
    server: https://kubernetes.default.svc
  project: networking
  source:
    chart: {{ .Values.certmanager.chart.name }}
    repoURL: {{ .Values.certmanager.chart.repo }}
    targetRevision: {{ .Values.certmanager.chart.version }}
    helm:
      version: v3
      values: |-
        installCRDs: true
        {{- if and .Values.certmanager.values.monitor .Values.monitoring.enabled .Values.monitoring.prometheus.enabled }}
        prometheus:
          enabled: true
          servicemonitor:
            enabled: false
            prometheusInstance: default
            targetPort: 9402
            path: /metrics
            interval: 60s
            scrapeTimeout: 30s
        {{- end }}
        {{- if .Values.proxies.enabled }}
        http_proxy: "{{ .Values.proxies.value }}"
        https_proxy: "{{ .Values.proxies.value }}"
        no_proxy: "{{ .Values.proxies.noProxy }}"
        {{- end }}
{{- if and .Values.certmanager.values.clusterIssuerLetsEncrypt.enabled  .Values.certmanager.values.clusterIssuerLetsEncrypt.stagging.enabled }}
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-staging
spec:
  acme:
    email: {{ .Values.certmanager.values.clusterIssuerLetsEncrypt.email }}
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-staging-key
    solvers:
    {{- if eq (include "ingress.namespace" .) "traefik-system" }}
    - http01:
        ingress:
          class: traefik
    {{- else if eq (include "ingress.namespace" .) "ingress-nginx" }}
    - http01:
        ingress:
          class: nginx
    {{- end }}
{{- end }}
{{- if and .Values.certmanager.values.clusterIssuerLetsEncrypt.enabled  .Values.certmanager.values.clusterIssuerLetsEncrypt.production.enabled }}
---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-production
spec:
  acme:
    email: {{ .Values.certmanager.values.clusterIssuerLetsEncrypt.email }}
    server: https://acme-v02.api.letsencrypt.org/directory
    privateKeySecretRef:
      name: letsencrypt-production-key
    solvers:
    {{- if eq (include "ingress.namespace" .) "traefik-system" }}
    - http01:
        ingress:
          class: traefik
    {{- else if eq (include "ingress.namespace" .) "ingress-nginx" }}
    - http01:
        ingress:
          class: nginx
    {{- end }}
{{- end }}
{{ end }}
