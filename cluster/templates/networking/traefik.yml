{{- define "traefik.enabled" -}}
{{- eq (include "ingress.namespace" .) "traefik-system" -}}
{{- end -}}
{{ if eq (include "traefik.enabled" .) "true" }}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: traefik
  namespace: {{ .Values.argocd.namespace }}
  finalizers:
  {{- include "argocd.applications.finalizers" . | nindent 4 }}
spec:
  {{- template "cluster.syncPolicy.default" . }}
  destination:
    namespace: {{ include "ingress.namespace" . }}
    server: https://kubernetes.default.svc
  project: networking
  source:
    chart: {{ .Values.ingress.traefik.chart.name }}
    repoURL: {{ .Values.ingress.traefik.chart.repo }}
    targetRevision: {{ .Values.ingress.traefik.chart.version }}
    helm:
      version: v3
      values: |-
        image:
          name: traefik
          tag: ""
          pullPolicy: Always
        deployment:
          enabled: true
          kind: DaemonSet
        {{- if and .Values.ingress.traefik.values.monitor .Values.monitoring.prometheus.enabled }}
          podAnnotations:
            prometheus.io/scrape: 'true'
            prometheus.io/port: '8888'
          additionalArguments:
            - --entrypoints.metrics.address=:8888
            - --metrics.prometheus=true
            - --metrics.prometheus.entryPoint=metrics
        metrics:
          serviceMonitor: true
          prometheus:
            enabled: true
        {{- end }}
        {{- if .Values.proxies.enabled }}
        env:
          - name: http_proxy
            value: "{{ .Values.proxies.value }}"
          - name: https_proxy
            value: "{{ .Values.proxies.value }}"
        {{- end }}
        service:
          enabled: true
          {{- if eq .Values.ingress.traefik.values.service.type "LoadBalancer" }}
          type: LoadBalancer
          {{- if .Values.ingress.traefik.values.service.LoadBalancerIps }}
          externalIPs:
            {{- range .Values.ingress.traefik.values.service.LoadBalancerIps }}
            - {{ . }}
            {{- end }}
            {{- end }}
          {{- else if eq .Values.ingress.traefik.values.service.type "NodePort" }}
          type: NodePort
          {{- end }}
        ingressClass:
          enabled: true
          isDefaultClass: true
        {{- if .Values.ingress.ingressDefinition.strictTLS }}
        tlsOptions:
          default:
            sniStrict: true
            preferServerCipherSuites: true
            minVersion: VersionTLS12
            cipherSuites:
              - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384   # TLS 1.2
              - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305    # TLS 1.2
              - TLS_AES_256_GCM_SHA384                  # TLS 1.3
              - TLS_CHACHA20_POLY1305_SHA256            # TLS 1.3
            curvePreferences:
              - CurveP521
              - CurveP384
        {{- end }}
        {{- if .Values.ingress.ingressDefinition.tolerations }}
        tolerations:
          {{- with .Values.ingress.ingressDefinition.tolerations }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- end }}
        {{- if .Values.ingress.ingressDefinition.nodeSelector }}
        nodeSelector:
          {{- with .Values.ingress.ingressDefinition.nodeSelector }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
        {{- end }}
{{- if .Values.ingress.ingressDefinition.strictTLS }}
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: security
  namespace: {{ include "ingress.namespace" . }}
spec:
  headers:
    frameDeny: true
    sslRedirect: true
    browserXssFilter: true
    contentTypeNosniff: true
    #HSTS
    stsIncludeSubdomains: true
    stsPreload: true
    stsSeconds: 31536000
{{- end }}
{{ end }}