---
# General

default:
  enabled: false
  storageClass: ""
  isBareMetal: false

debug: false

sync:
  objectsPrune: true
  automated:
    enabled: true
    prune: true
    selfHeal: true

proxies:
  enabled: false
  value: ""
  noProxy: ""
  # Value should be noProxy: .cluster.local,.svc,podsCIDR,svcCIDR

# Backup 

backup:
  enabled: false

# Chaos engineering

chaosMesh:
  enabled: false
  namespace: chaos-mesh
  chart:
    repo: https://charts.chaos-mesh.org
    name: chaos-mesh
    version: "2.1.3"
    values: {}

# Integration

argocd:
  enabled: false
  namespace: argocd
  chart:
    repo: https://argoproj.github.io/argo-helm
    name: argo-cd
    version: "3.35.0"
    values:
      avp:
        enabled: false
        version: "1.7.0"
      ha: true
      ingress:
        enabled: true
        name: argocd
      insecure: false
      repositories: []


namespaceConfiguratorOperator:
  enabled: false
  namespace: namespace-configurator
  chart:
    repo: https://redhat-cop.github.io/namespace-configuration-operator
    name: namespace-configuration-operator
    version: v1.2.2
    values:
      monitor: false

namespaceConfiguration:
  enabled: false
  namespace: namespace-configurator
  chart:
    repo: https://gitlab.com/a4537/repository.git
    path: charts/namespace-configuration
    targetRevision: HEAD
    values:
      quotas: []
      networkPolicies: []

olm:
  enabled: false
  namespace: olm
  chart:
    repo: https://gitlab.com/a4537/repository.git
    path: charts/olm
    targetRevision: HEAD
    values:
      monitoring: false
      debug: false

# Networking

ingress:
  ingressDefinition:
    ssl:
      strictTLS: false
      enabled: true
    dns:
      mode: wildcard # domain|wildcard
      wildcard: your-cluster.domain.tld
      domain: domain.tld
  traefik:
    enabled: false
    chart:
      repo: https://helm.traefik.io/traefik
      name: traefik
      version: "10.15.0"
      values:
        monitor: false
        ingressAnnotations: {}
        # if strictTLs you should be using => traefik.ingress.kubernetes.io/router.middlewares: traefik-system-security@kubernetescrd
        service:
          type: LoadBalancer # LoadBalancer|NodePort
          LoadBalancerIps: [] # Only for BareMetal support
  nginx:
    enabled: false
    chart:
      repo: https://kubernetes.github.io/ingress-nginx
      name: ingress-nginx
      version: "4.0.18"
      values:
        monitor: false
        service:
          monitor: false
          type: LoadBalancer # LoadBalancer|NodePort
          LoadBalancerIps: [] # Only for BareMetal support
          isDefault: false
        ingressAnnotations: {}
        
certmanager:
  enabled: false
  namespace: cert-manager
  chart:
    repo: https://charts.jetstack.io
    name: cert-manager
    version: '1.2.0'
    values:
      monitor: true
      clusterIssuerLetsEncrypt:
        enabled: false
        stagging:
          enabled: false
          email: jdoe@domain.tld
        production:
          enabled: false
          email: jdoe@domain.tld

# Monitoring

monitoring:
  enabled: false
  namespace: monitoring
  prometheus:
    enabled: false
    chart:
      repo: https://prometheus-community.github.io/helm-charts
      name: prometheus
      version: "9.2.2"
      values:
        rules:
          preconfiguredEnabled: true
          # Not available yet
          # customs: {}
        alertmanager:
          enabled: false
          pvcSize: "10Gi"
          configurationFile: {}
            # route:
            #   group_by: ['instance', 'severity']
            #   group_wait: 5m
            #   group_interval: 10m
            #   repeat_interval: 10m
            #   receiver: "slack"
            # receivers:
            #   - name: 'slack'
            #     slack_configs:
            #       - send_resolved: true
            #         text: '{{ .CommonAnnotations.description }}'
            #         username: 'alertmanager-bot'
            #         channel: 'alertmanager'
            #         api_url: 'https://hooks.slack.com/not/working'
        kubeStateMetrics:
          enabled: true
        nodeExporter:
          enabled: true
        server:
          pvcSize: "30Gi"
          ingress:
            enabled: true
            name: prometheus
          dataRetention: 720h
  grafana:
    enabled: false
    chart:
      repo: grafana
      name: https://grafana.github.io/helm-charts
      version: "5.2.0"
      values:
        passwordType: raw # raw|vault
        adminPassword: "changeme"
        adminUser: "admin"
        avp_path: "avp/grafana"
        pvcSize: 10Gi
        ingress: 
          enabled: true
          name: grafana
        customDashboards: {}
  fio:
    enabled: false
    chart:
      repo: https://gitlab.com/a4537/repository.git
      path: charts/fio
      targetRevision: HEAD
      values:
        installOnControllPlane: true
        enableGrafanaDashboard: true
  prometheusMsTeams:
    enabled: false
    chart:
      repo: https://prometheus-msteams.github.io/prometheus-msteams/
      name: prometheus-msteams
      version: "1.3.0"
      values:
        monitor: false
        hooks: []
  blackboxExporter:
    enabled: false
    chart:
      repo: https://prometheus-community.github.io/helm-charts
      name: prometheus-blackbox-exporter
      version: "4.10.4"
      # Not yet ready for url scraping
      values:
        enablePrometheusRules: false
        enableGrafanaDashboard: false
  goldpinger:
    enabled: false
    chart:
      repo: https://okgolove.github.io/helm-charts/
      name: goldpinger
      version: "5.1.0"
      values:
        enablePrometheusRules: true
        enableGrafanaDashboard: true
  helmExporter:
    enabled: false
    chart:
      repo: https://shanestarcher.com/helm-charts/
      name: helm-exporter
      version: "1.2.2+6766a95"
      values:
        enablePrometheusRules: false
        # You can specify namespaces to ignore - comma separated list of regexps
        disabledNamespaces: null
        # Doesn't support private repos yet

# Logging

logging:
  enabled: false
  loki:
    enabled: false
    chart:
      repo: https://prometheus-community.github.io/helm-charts
      name: prometheus
      version: "9.2.2"
      values: {}
  promtail:
    enabled: false
    chart:
      repo: https://prometheus-community.github.io/helm-charts
      name: prometheus
      version: "9.2.2"
      values: {}
  fluentd:
    enabled: false
    chart:
      repo: https://prometheus-community.github.io/helm-charts
      name: prometheus
      version: "9.2.2"
      values: {}
  logstash:
    enabled: false
    chart:
      repo: https://prometheus-community.github.io/helm-charts
      name: prometheus
      version: "9.2.2"
      values: {}
  eck:
    enabled: false
    chart:
      repo: https://prometheus-community.github.io/helm-charts
      name: prometheus
      version: "9.2.2"
      values: {}

# Security

vault:
  enabled: false
  namespace: vault
  chart:
    repo: https://grafana.github.io/helm-charts
    name: grafana
    version: "5.2.0"
    values:
      ingress: 
        enabled: true
        name: vault
      pvcSize: "10Gi"
      ha: false

# Storage

storage:
  enabled: false
