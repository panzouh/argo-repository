---
# General

default:
  enabled: false
  storageClass: ""
  smtpServer: "0.0.0.0:25"

debug: false

sync:
  enabled: true
  selfHeal: true
  prune: true

proxies:
  enabled: false
  value: ""
  noProxy: ""

# Backup 

backup:
  enabled: false

# Chaos engineering

chaosMesh:
  enabled: false
  namespace: chaos-mesh
  chart:
    repo: https://charts.chaos-mesh.org
    name: chaos-mesh
    version: "2.1.3"
  values: {}

# Integration

argocd:
  enabled: false
  namespace: argocd
  chart:
    repo: https://argoproj.github.io/argo-helm
    name: argo-cd
    version: "4.5.0"
  values:
    logLevel: debug
    avp:
      enabled: false
      saName: avp
      version: "1.10.1"
      auth:
        vaultUrl: "https://your-vault.domain.tld"
        type: k8s
        path: auth/kubernetes
    monitor: false
    ha: true
    ingress:
      enabled: true
      name: argocd
    insecure: false
    repositories: []

namespaceConfiguratorOperator:
  enabled: false
  namespace: namespace-configurator
  chart:
    repo: https://redhat-cop.github.io/namespace-configuration-operator
    name: namespace-configuration-operator
    version: v1.2.2
  values:
    monitor: false

namespaceConfiguration:
  enabled: false
  namespace: namespace-configurator
  chart:
    repo: https://github.com/panzouh/argo-repository.git
    path: charts/namespace-configuration
    targetRevision: HEAD
  values:
    quotas: []
    networkPolicies: []
    isolatedNetworkPolicy:
      enabled: false
      clusterCIDRs: []

olm:
  enabled: false
  namespace: olm
  chart:
    repo: https://github.com/panzouh/argo-repository.git
    path: charts/olm
    targetRevision: HEAD
  values:
    monitoring: false
    debug: false

# Networking

ingress:
  ingressDefinition:
    ssl:
      strictTLS: false
      enabled: true
    dns:
      mode: wildcard # domain|wildcard
      wildcard: your-cluster.domain.tld
      domain: domain.tld
  traefik:
    enabled: false
    chart:
      repo: https://helm.traefik.io/traefik
      name: traefik
      version: "10.15.0"
    values:
      monitor: false
      ingressAnnotations: {}
      # if strictTLs you should be using => traefik.ingress.kubernetes.io/router.middlewares: traefik-system-security@kubernetescrd
      service:
        type: LoadBalancer # LoadBalancer|NodePort
        LoadBalancerIps: [] # Only for BareMetal support
  nginx:
    enabled: false
    chart:
      repo: https://kubernetes.github.io/ingress-nginx
      name: ingress-nginx
      version: "4.0.18"
    values:
      monitor: false
      service:
        type: LoadBalancer # LoadBalancer|NodePort
        LoadBalancerIps: [] # Only for BareMetal support
      ingressAnnotations: {}
        
certmanager:
  enabled: false
  namespace: cert-manager
  chart:
    repo: https://charts.jetstack.io
    name: cert-manager
    version: '1.8.0'
  values:
    monitor: false
    clusterIssuerLetsEncrypt:
      enabled: false
      email: jdoe@domain.tld
      stagging:
        enabled: false
      production:
        enabled: false

# Monitoring

monitoring:
  namespace: monitoring
  prometheus:
    enabled: false
    chart:
      repo: https://prometheus-community.github.io/helm-charts
      name: prometheus
      version: "15.8.7"
    values:
      rules:
        preconfiguredEnabled: true
        # Not available yet
        customs: {}
      alertmanager:
        enabled: false
        pvcSize: "5Gi"
        configurationFile: {}
      kubeStateMetrics:
        enabled: true
      nodeExporter:
        enabled: true
      server:
        pvcSize: "30Gi"
        ingress:
          enabled: true
          name: prometheus
          auth: 
            type: raw # Can be none|raw|vault
            # Only for type raw
            username: admin
            password: changeme
            # Only for type vault
            avpPath: avp/data/prometheus
            authKey: htpasswd
        dataRetention: 720h
  grafana:
    enabled: false
    chart:
      repo: https://grafana.github.io/helm-charts
      name: grafana
      version: "6.29.2"
    values:
      passwordType: raw # raw|vault
      adminUser: "admin"
      adminPassword: "changeme"
      avpPath: "avp/data/grafana"
      # Only for type vault
      userKey: username
      passwordKey: password
      pvcSize: 10Gi
      ingress: 
        enabled: true
        name: grafana
      customDashboards: {}
      customDashboardsGNET: {}
  fio:
    enabled: false
    chart:
      repo: https://github.com/panzouh/argo-repository.git
      path: charts/fio
      targetRevision: HEAD
    values:
      installOnControllPlane: true
      enableGrafanaDashboard: true
  prometheusMsTeams:
    enabled: false
    chart:
      repo: https://prometheus-msteams.github.io/prometheus-msteams/
      name: prometheus-msteams
      version: "1.3.0"
    values:
      monitor: false
      hooks: []
  discord:
    enabled: false
    chart:
      repo: https://masgustavos.github.io/helm
      name: alertmanager-discord
      version: "0.0.5"
    values:
      rolesToMention: []
      channels: {}
  blackboxExporter:
    enabled: false
    chart:
      repo: https://prometheus-community.github.io/helm-charts
      name: prometheus-blackbox-exporter
      version: "4.10.4"
      # Not yet ready for url scraping
    values:
      enablePrometheusRules: false
      enableGrafanaDashboard: false
      scrapeUrls: []
  goldpinger:
    enabled: false
    chart:
      repo: https://okgolove.github.io/helm-charts
      name: goldpinger
      version: "5.1.0"
    values:
      enablePrometheusRules: true
      enableGrafanaDashboard: true

# Logging

logging:
  enabled: false
  loki:
    enabled: false
    chart:
      repo: https://grafana.github.io/helm-charts
      name: loki
      version: "2.10.3"
    values:
      monitor: false
      pvcSize: 100Gi
      enableGrafanaDashboard: true
  promtail:
    enabled: false
    chart:
      repo: https://grafana.github.io/helm-charts
      name: promtail
      version: "3.11.0"
    values:
      installOnControllPlane: true
      runtimeLogs: "/var/lib/docker/containers"
  # Will be released in Beta version
  fluentd:
    enabled: false
    chart:
      repo: https://prometheus-community.github.io/helm-charts
      name: prometheus
      version: "9.2.2"
    values: {}
  logstash:
    enabled: false
    chart:
      repo: https://prometheus-community.github.io/helm-charts
      name: prometheus
      version: "9.2.2"
    values: {}
  eck:
    enabled: false
    chart:
      repo: https://prometheus-community.github.io/helm-charts
      name: prometheus
      version: "9.2.2"
    values: {}

# Security

vault:
  enabled: false
  namespace: argocd
  chart:
    repo: https://helm.releases.hashicorp.com
    name: vault
    version: "0.19.0"
  values:
    monitor: false
    ingress:
      enabled: true
      name: vault
    pvcSize: "10Gi"
    ha: false

vaultSecrets:
  namespace: argocd
  chart:
    repo: https://github.com/panzouh/argo-repository.git
    path: charts/olm
    targetRevision: HEAD

userManagement:
  enabled: false
  namespace: argocd
  chart:
    repo: https://github.com/panzouh/argo-repository.git
    path: charts/users
    targetRevision: HEAD
  values:
    namespaceRoles: []
    clusterRoles: []

starboard:
  enabled: false
  namespace: starboard-system
  chart:
    repo: https://aquasecurity.github.io/helm-charts/
    name: starboard-operator
    version: "0.10.4"
  values:
    targetNamespaces: ""
    excludeNamespaces: ""
    trivy:
      imageRef: docker.io/aquasec/trivy:0.25.2
      severity: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
      nonSslRegistries: {}

# Storage

storage:
  enabled: false
